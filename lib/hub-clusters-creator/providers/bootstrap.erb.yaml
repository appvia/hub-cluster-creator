---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap
  namespace: kube-system
data:
  repositories: |
    # @TODO need to figure out a way to install this via the OLM - it's
    # due the use of a genCert which is causing the OLM to cycle the
    # deployments
    svc-cat,https://svc-catalog-charts.storage.googleapis.com
    # installation of the aws service broker
    aws-sb,https://awsservicebroker.s3.amazonaws.com/charts
    <%- end -%>

  charts: |
    # helm source for the service catalog
    svc-cat/catalog,catalog,
    <%- if context[:provider].equal?('eks') -%>
    # helm source for the aws service broker
    aws-sb/aws-servicebroker,aws-sb,--set-string aws.targetaccountid=<%= context[:account_id] %> --set aws.region=<%= context[:region] %> --set aws.accesskeyid=<%= context[:access_id] %> --set aws.secretkey=<%= context[:access_key] %>
    <%- end -%>

  #
  ## Metrics namespace
  #
  namespaces.yaml: |
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: prometheus
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: brokers

  #
  ## Catalog
  #
  catalog.yaml: |
    ---
    apiVersion: operators.coreos.com/v1alpha1
    kind: CatalogSource
    metadata:
      name: appvia-catalog
      namespace: olm
    spec:
      image: quay.io/appvia/operator-catalog:v0.0.1
      displayName: Appvia Operators
      publisher: Appvia.io
      sourceType: grpc

  #
  ## Operator groups
  #
  operatorgroups.yaml: |
    ---
    apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: operator-group
      namespace: <%= namespace %>
    spec:
      namespaces:
        - <%= namespace %>
    ---
    apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: operator-group
      namespace: broker

  #
  ## Operator subscriptions
  #
  <%-
    namespace = "prometheus"
    operators = [
      { package: 'prometheusoperator', channel: 'beta',  version: '0.33.0' },
      { package: 'grafana-operator',   channel: 'alpha', version: 'v1.3.0' },
      { package: 'loki-operator', channel: 'stable', version: 'v0.0.1' },
      { package: 'metrics-operator', channel: 'stable', version: 'v0.0.2' },
    ]
  -%>
  <%- operators.each do |x| %>
  <%= x[:package] %>.yaml: |
    apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: <%= x[:package] %>
      namespace: <%= namespace %>
    spec:
      name: <%= x[:package] %>
      channel: <%= x[:channel] %>
      installPlanApproval: Automatic
      source: appvia-catalog
      sourceNamespace: olm
      startingCSV: <%= x[:package].<%= x[:version] %>
  <%- end %>

  <%- if context[:provider].equal?('eks') -%>
  aws-broker-operator.yaml: |
    apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: aws-broker-operator
      namespace: <%= namespace %>
    spec:
      name: aws-broker
      channel: stable
      installPlanApproval: Automatic
      source: appvia-catalog
      sourceNamespace: olm
      startingCSV: aws-broker-operator.v0.0.1
  <%- end %>

  #
  ## Grafana
  #
  grafana.yaml: |
    apiVersion: integreatly.org/v1alpha1
    kind: Grafana
    metadata:
      name: grafana
      namespace: <%= namespace %>
    spec:
      hostname: <%= context[:grafana_hostname] %>.<%= context[:domain] %>
      ingress:
        annotations:
          'service.beta.kubernetes.io/aws-load-balancer-backend-protocol': 'http'
      service:
        type: 'LoadBalancer'
      <%- else %>
      service:
        type: 'NodePort'
      <%- end ->
      config:
        analytics:
          check_for_updates: true
        <%- if context[:github_organization] %>
        auth.github:
          allow_sign_up: true
          allowed_organizations: <%= context[:github_organization] %>
          api_url: https://api.github.com/user
          auth_url: https://github.com/login/oauth/authorize
          client_id: <%= context[:github_client_id] %>
          client_secret: <%= context[:github_client_secret] %>
          enabled: true
          scopes: user,read:org
          token_url: https://github.com/login/oauth/access_token
        <%- end ->
        auth:
          disable_signout_menu: true
        auth.anonymous:
          enabled: false
        log:
          level: info
          mode: console
        security:
          admin_password: <%= context[:grafana_password] %>
          admin_user: admin
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        server:
          domain: <%= context[:grafana_hostname] %>.<%= context[:domain] %>
          root_url: http://<%= context[:grafana_hostname] %>.<%= context[:domain] %>
      dashboardLabelSelector:
        - matchExpressions:
          - key: app
            operator: In
            values:
            - grafana

  monitoring.yaml: |
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: Metrics
    metadata:
      name: metrics
      namespace: <%= namespace %>
    spec:
      alertmanager:
        enabled: true
        alertmanagerSpec:
          image:
            repository: quay.io/prometheus/alertmanager
            tag: v0.19.0
          retention: 120h
        ingress:
          enabled: false
          annotations: {}
          hosts: []
          labels: {}
          paths: []
          tls: []
      kube-state-metrics:
        podSecurityPolicy:
          enabled: true
        rbac:
          create: true
      kubeEtcd:
        enabled: false
      kubeProxy:
        enabled: true
      kubeScheduler:
        enabled: false
      kubeStateMetrics:
        enabled: true
      kubelet:
        enabled: true
      nodeExporter:
        enabled: true
      prometheus:
        enabled: true
        prometheusSpec:
          image:
            repository: quay.io/prometheus/prometheus
            tag: v2.12.0
          replicas: 2
          retention: 10d
