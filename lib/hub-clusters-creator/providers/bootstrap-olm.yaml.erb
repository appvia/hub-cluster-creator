---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap-olm
  namespace: kube-system
data:
  #
  ## Metrics namespace
  #
  namespaces.yaml: |
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: prometheus
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: brokers

  #
  ## Catalog
  #
  catalog.yaml: |
    ---
    apiVersion: operators.coreos.com/v1alpha1
    kind: CatalogSource
    metadata:
      name: appvia-catalog
      namespace: olm
    spec:
      image: quay.io/appvia/operator-catalog:v0.0.1
      displayName: Appvia Operators
      publisher: Appvia.io
      sourceType: grpc

  #
  ## Operator subscriptions
  #
  <%-
    namespace = 'prometheus'
    brokers = 'brokers'
    broker_username = 'root'
    broker_password = 'password'
    operators = [
      { package: 'prometheus', channel: 'beta', label: 'k8s-app=prometheus-operator', version: 'prometheusoperator.0.33.0' },
      { package: 'grafana-operator',   channel: 'alpha', label: 'app=grafana-operator', version: 'grafana-operator.v1.3.0' },
      { package: 'loki-operator', channel: 'stable', label: 'name=loki-operator', version: 'loki-operator.v0.0.1' },
      { package: 'metrics-operator', channel: 'stable', label: 'name=metrics-operator'},
      { package: 'mariadb-operator', channel: 'stable', label: 'name=mariadb-operator'},
    ]

    storage_class = 'default'

    case context[:provider]
    when 'gke'
      storage_class = 'standard'
      operators.push(
        channel: 'stable',
        label: 'name=gcp-service-broker-operator',
        namespace: brokers,
        package: 'gcp-service-broker-operator',
      )
    when 'eks'
      operators.push(
        channel: 'stable',
        label: 'name=aws-service-broker-operator',
        namespace: brokers,
        package: 'aws-service-broker-operator',
      )
    end
  -%>
  #
  ## Operator groups
  #
  operatorgroups.yaml: |
    ---
    apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: operator-group
      namespace: <%= namespace %>
    spec:
      namespaces:
        - <%= namespace %>
    ---
    apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: operator-group
      namespace: brokers
    spec:
      namespaces:
        - brokers

  <%- operators.each_with_index do |x,i| %>
  subscription-<%= i %>.yaml: |
    # operator_selector: <%= x[:label] %>
    apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: <%= x[:package] %>
      namespace: <%= x[:namespace] || namespace %>
    spec:
      name: <%= x[:package] %>
      channel: <%= x[:channel] %>
      installPlanApproval: Automatic
      source: appvia-catalog
      sourceNamespace: olm
  <%- end %>

  #
  ## Grafana
  #
  crd-grafana.yaml: |
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: Mariadb
    metadata:
      name: grafana-db
      namespace: <%= namespace %>
    spec:
      db:
        forcePassword: false
        name: grafana
      master:
        persistence:
          enabled: false
          size: 10Gi
      rootUser:
        forcePassword: true
        password: <%= context[:grafana_db_password] %>
      fullnameOverride: grafana-db
      metrics:
        enabled: true
        serviceMonitor:
          enabled: false
      replication:
        enabled: false
      serviceAccount:
        create: true
      slave:
        replicas: 0
    ---
    apiVersion: integreatly.org/v1alpha1
    kind: Grafana
    metadata:
      name: grafana
      namespace: <%= namespace %>
    spec:
      replicas: 3
      <%- if context[:provider] == 'eks' %>
      service:
        type: LoadBalancer
        annotations:
          'service.beta.kubernetes.io/aws-load-balancer-backend-protocol': 'http'
      <%- else %>
      hostname: <%= context[:grafana_hostname] %>.<%= context[:domain] %>
      service:
        type: NodePort
      <%- end %>
      config:
        analytics:
          check_for_updates: true
        auth:
          disable_signout_menu: false
        auth.basic:
          enabled: true
        auth.anonymous:
          enabled: false
        <%- if context[:github_organization] %>
        auth.github:
          allow_sign_up: true
          allowed_organizations: <%= context[:github_organization] %>
          api_url: https://api.github.com/user
          auth_url: https://github.com/login/oauth/authorize
          client_id: <%= context[:github_client_id] %>
          client_secret: <%= context[:github_client_secret] %>
          enabled: true
          scopes: user,read:org
          token_url: https://github.com/login/oauth/access_token
        <%- end %>
        database:
          host: grafana-db
          name: grafana
          password: <%= context[:grafana_db_password] %>
          type: mysql
          user: root
        log:
          level: info
          mode: console
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        security:
          admin_password: <%= context[:grafana_password] %>
          admin_user: admin
        server:
          domain: <%= context[:grafana_hostname] %>.<%= context[:domain] %>
          enable_gzip: true
          root_url: http://<%= context[:grafana_hostname] %>.<%= context[:domain] %>
        users:
          auto_assign_org_role: Editor
      dashboardLabelSelector:
        - matchExpressions:
          - key: app
            operator: In
            values:
              - grafana
    ---
    apiVersion: integreatly.org/v1alpha1
    kind: GrafanaDataSource
    metadata:
      name: prometheus
      namespace: <%= namespace %>
    spec:
      name: cluster.yaml
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus-operated:9090
          isDefault: true
          version: 1
          editable: false

  #
  ## Logging
  #
  crd-logging.yaml: |
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: Loki
    metadata:
      name: loki
      namespace: <%= namespace %>
    spec:
      loki:
        enabled: true
        image:
          repository: grafana/loki
          tag: v0.3.0
        persistence:
          accessModes:
            - ReadWriteOnce
          enabled: true
          size: 10Gi
          storageClassName: <%= storage_class %>
        replicas: 1
        serviceMonitor:
          enabled: true
          additionalLabels:
            metrics: prometheus

      promtail:
        enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: grafana/promtail
          tag: v0.3.0
        serviceMonitor:
          additionalLabels:
            metrics: prometheus
    ---
    apiVersion: integreatly.org/v1alpha1
    kind: GrafanaDataSource
    metadata:
      name: loki
      namespace: <%= namespace %>
    spec:
      datasources:
        - access: proxy
          editable: false
          isDefault: false
          name: loki
          type: loki
          url: http://loki:3100
          version: 1
      name: logging.yaml

  crd-monitoring.yaml: |
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: Metrics
    metadata:
      name: metrics
      namespace: <%= namespace %>
    spec:
      alertmanager:
        enabled: true
        alertmanagerSpec:
          image:
            repository: quay.io/prometheus/alertmanager
            tag: v0.19.0
          replicas: 1
          retention: 120h
      coreDns:
        enabled: true
        service:
          port: 10054
          targetPort: 10054
          selector:
            k8s-app: kube-dns
      kubeProxy:
        enabled: true
      kubeStateMetrics:
        enabled: true
      kubelet:
        enabled: true
      nodeExporter:
        enabled: true
      prometheus:
        prometheusSpec:
          image:
            repository: quay.io/prometheus/prometheus
            tag: v2.12.0
          replicas: 2
          retention: 10d
          ruleSelector:
            app: prometheus
          serviceMonitorSelector:
            metrics: prometheus
      kube-state-metrics:
        fullnameOverride: kube-state-metrics
      prometheus-node-exporter:
        fullnameOverride: node-exporter

  <%- if context[:provider] == 'gke' %>
  crd-gcp-service-broker.yaml: |
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: Mariadb
    metadata:
      name: gcp-broker-db
      namespace: <%= brokers %>
    spec:
      db:
        forcePassword: false
        name: <%= context[:broker_db_name] %>
      master:
        persistence:
          enabled: true
          size: 4Gi
      rootUser:
        forcePassword: true
        password: <%= context[:broker_db_password] %>
      fullnameOverride: gcp-broker-db
      metrics:
        enabled: true
        serviceMonitor:
          enabled: false
      replication:
        enabled: false
      serviceAccount:
        create: true
      slave:
        replicas: 0
    ---
    apiVersion: helm.appvia.io/v1alpha1
    kind: GcpServiceBroker
    metadata:
      name: gcp-broker
      namespace: <%= brokers %>
    spec:
      broker:
        password: <%= broker_password %>
        service_account_json: '<%= JSON.parse(context[:credentials]).to_json %>'
        username: <%= broker_username %>
      image:
        repository: gcr.io/gcp-service-broker/gcp-service-broker
        tag: v4.3.0
      mysql:
        embedded: false
        host: gcp-broker-db
        mysqlDatabase: <%= context[:broker_db_name] %>
        mysqlPassword: <%= context[:broker_db_password] %>
        mysqlUser: root
      replicaCount: 1
  <%- end %>
